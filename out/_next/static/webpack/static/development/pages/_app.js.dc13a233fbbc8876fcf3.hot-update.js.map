{"version":3,"file":"static/webpack/static/development/pages/_app.js.dc13a233fbbc8876fcf3.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App from \"next/app\"\nimport Head from \"next/head\"\nimport React from \"react\"\nimport { Global, css } from \"@emotion/core\"\nimport createStore from \"unistore\"\nimport { Provider } from \"unistore/react\"\nimport { ThemeProvider } from \"emotion-theming\"\nimport { get, set } from \"idb-keyval\"\n\nimport theme from \"../theme\"\n\nconst defaultState = {\n  pageData: {}\n}\n\nconst getState = async (store, defaultState) => {\n  if (typeof window !== \"undefined\") {\n    const state = await get(\"state\")\n    return store.setState({ ...state })\n  }\n  return defaultState\n}\n\nconst store = createStore(defaultState)\n\nif (typeof window !== \"undefined\") {\n  store.subscribe(async state => await set(\"state\", state))\n  getState(store, defaultState)\n}\n\nexport default class MyApp extends App {\n  componentDidMount() {\n    logPageView()\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n\n    return (\n      <>\n        <Head>\n          <title>Color - Cloudflare Design</title>\n          <meta\n            name=\"description\"\n            content=\"A color palette tool for interface design\"\n          />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            property=\"og:image\"\n            content=\"https://cloudflare-assets.s3.amazonaws.com/palette-card.jpg\"\n          />\n          <meta property=\"og:url\" content=\"https://cloudflare.design/color\" />\n          <meta name=\"twitter:site\" content=\"@cloudflare\" />\n          <meta property=\"og:title\" content=\"Color by Cloudflare Design\" />\n          <meta\n            property=\"og:description\"\n            content=\"A color palette tool for interface design\"\n          />\n        </Head>\n        <ThemeProvider theme={theme}>\n          <>\n            <Global\n              styles={css`\n                body {\n                  margin: 0;\n                  font-family: ${theme.font.sansSerif};\n                  background-color: ${theme.colors.white};\n                }\n              `}\n            />\n\n            <Provider store={store}>\n              <Component {...pageProps} />\n            </Provider>\n          </>\n        </ThemeProvider>\n      </>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlDA;AACA;;;;;;;;A","sourceRoot":""}